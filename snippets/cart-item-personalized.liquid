{% comment %}
  Personalized Cart Item Template
  Displays personalized products in cart with mockup screenshot and design download
{% endcomment %}

<div class="cart-item cart-item--personalized" data-cart-item-key="{{ item.key }}">
  <div class="cart-item__image">
    {%- if item.properties['Mockup Screenshot'] -%}
      <img 
        src="{{ item.properties['Mockup Screenshot'] }}" 
        alt="Customized {{ item.product.title }}"
        loading="lazy"
        width="100"
        height="100"
        style="object-fit: cover; border-radius: 4px;"
      />
    {%- else -%}
      <img 
        src="{{ item.image | image_url: width: 100 }}" 
        alt="{{ item.product.title }}"
        loading="lazy"
        width="100"
        height="100"
      />
    {%- endif -%}
  </div>
  
  <div class="cart-item__content">
    <div class="cart-item__title">
      <a href="{{ item.url }}">{{ item.product.title }}</a>
    </div>
    
    {%- if item.product.has_only_default_variant == false -%}
      <div class="cart-item__variant">
        {{ item.variant.title }}
      </div>
    {%- endif -%}
    
    <div class="cart-item__price">
      {%- if item.original_price != item.final_price -%}
        <span class="cart-item__price--original">{{ item.original_price | money }}</span>
      {%- endif -%}
      <span class="cart-item__price--final">{{ item.final_price | money }}</span>
    </div>
    
    <div class="cart-item__quantity">
      <label for="quantity-{{ item.key }}">Quantity:</label>
      <input 
        type="number" 
        id="quantity-{{ item.key }}" 
        name="updates[]" 
        value="{{ item.quantity }}" 
        min="0" 
        aria-label="Quantity for {{ item.product.title }}"
      />
    </div>
    
    {%- comment -%} Personalized product properties {%- endcomment -%}
    {%- if item.properties['Design Data'] or item.properties['Uploaded Design'] -%}
      <div class="cart-item__personalization">
        <div class="cart-item__personalization-title">
          <strong>Personalization:</strong>
        </div>
        
        {%- if item.properties['Uploaded Design'] -%}
          <div class="cart-item__personalization-item">
            <span class="cart-item__personalization-label">Design File:</span>
            <a 
              href="{{ item.properties['Uploaded Design'] }}" 
              target="_blank" 
              class="cart-item__personalization-link"
              download
            >
              ðŸ“¥ Download Design
            </a>
          </div>
        {%- endif -%}
        
        {%- if item.properties['Mockup Screenshot'] -%}
          <div class="cart-item__personalization-item">
            <span class="cart-item__personalization-label">Mockup:</span>
            <a 
              href="{{ item.properties['Mockup Screenshot'] }}" 
              target="_blank" 
              class="cart-item__personalization-link"
              download
            >
              ðŸ“¸ Download Mockup
            </a>
          </div>
        {%- endif -%}
        
        {%- unless item.properties['Uploaded Design'] or item.properties['Mockup Screenshot'] -%}
          <div class="cart-item__personalization-item">
            <span class="cart-item__personalization-note">
              No design file available
            </span>
          </div>
        {%- endunless -%}
      </div>
    {%- endif -%}
    
    {%- comment -%} Other product properties {%- endcomment -%}
    {%- for property in item.properties -%}
      {%- assign property_first_char = property.first | slice: 0 -%}
      {%- if property.last != blank and property_first_char != '_' and property.first != 'Uploaded Design' and property.first != 'Mockup Screenshot' and property.first != 'Design Data' -%}
        <div class="cart-item__property">
          <span class="cart-item__property-label">{{ property.first }}:</span>
          <span class="cart-item__property-value">{{ property.last }}</span>
        </div>
      {%- endif -%}
    {%- endfor -%}
  </div>
  
  <div class="cart-item__actions">
    <button 
      type="button" 
      class="cart-item__remove" 
      onclick="removeCartItem('{{ item.key }}')"
      aria-label="Remove {{ item.product.title }} from cart"
    >
      âœ•
    </button>
  </div>
</div>

<style>
  .cart-item--personalized {
    border: 2px solid #e3f2fd;
    border-radius: 8px;
    padding: 16px;
    margin-bottom: 16px;
    background: #fafbfc;
  }
  
  .cart-item__personalization {
    margin-top: 12px;
    padding: 12px;
    background: #e8f5e8;
    border-radius: 6px;
    border-left: 4px solid #4caf50;
  }
  
  .cart-item__personalization-title {
    margin-bottom: 8px;
    color: #2e7d32;
    font-size: 0.9rem;
  }
  
  .cart-item__personalization-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 4px;
    font-size: 0.85rem;
  }
  
  .cart-item__personalization-label {
    color: #555;
    font-weight: 500;
  }
  
  .cart-item__personalization-link {
    color: #1976d2;
    text-decoration: none;
    font-weight: 500;
    transition: color 0.2s ease;
  }
  
  .cart-item__personalization-link:hover {
    color: #1565c0;
    text-decoration: underline;
  }
  
  .cart-item__personalization-note {
    color: #999;
    font-style: italic;
    font-size: 0.85rem;
  }
  
  .cart-item__property {
    margin-top: 4px;
    font-size: 0.85rem;
  }
  
  .cart-item__property-label {
    color: #666;
    font-weight: 500;
  }
  
  .cart-item__property-value {
    color: #333;
  }
  
  @media (max-width: 768px) {
    .cart-item--personalized {
      padding: 12px;
    }
    
    .cart-item__personalization-item {
      flex-direction: column;
      align-items: flex-start;
      gap: 4px;
    }
  }
</style>

<script>
  function removeCartItem(key) {
    fetch('/cart/change.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        id: key,
        quantity: 0
      })
    })
    .then(response => response.json())
    .then(data => {
      // Update cart drawer or reload page
      const cartDrawer = document.querySelector('cart-drawer');
      if (cartDrawer && cartDrawer.renderContents) {
        cartDrawer.renderContents(data);
      } else {
        window.location.reload();
      }
    })
    .catch(error => {
      console.error('Error removing item:', error);
      window.location.reload();
    });
  }
</script> 